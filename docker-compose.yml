services:
  php:
    build:
      context: .
      target: dev
    ports:
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
    volumes:
      - ./:/app:rw,cached
      - /app/var
      - /app/vendor
    restart: on-failure
    depends_on:
      database:
        condition: service_started
      mailhog:
        condition: service_started
      queue:
        condition: service_healthy
    networks:
      - network

  database:
    build: ./docker/postgres
    ports:
     - '5432:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
      PG_REP_USER: rep
      PG_REP_PASSWORD: 123456
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    networks:
      - network


  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - network
        
  queue: 
    image: rabbitmq:3.13-management-alpine
    ports: 
      - ${DOCKER_HOST_QUEUE_PORT:-15672}:15672 
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - network
        
volumes:
  db-data:

networks:
  network:

